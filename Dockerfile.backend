# Use Python 3.12 slim image as base
FROM python:3.12-slim-bullseye

# Set build-time arguments
ARG SKIP_CRONTAB_SETUP=true
ENV SKIP_CRONTAB_SETUP=$SKIP_CRONTAB_SETUP

ARG DOCKER_BUILD=true
ENV DOCKER_BUILD=$DOCKER_BUILD

# Install necessary dependencies
RUN apt-get update



# Set the working directory
WORKDIR /app

# Copy only requirements and setup scripts first to leverage Docker cache
COPY BackEndFlask/requirements.txt BackEndFlask/setupEnv.py BackEndFlask/dbinsert.py /app/

# Install Python dependencies
RUN pip install --no-cache-dir --upgrade pip \
    && pip install --no-cache-dir --root-user-action=ignore -r requirements.txt

# Copy the rest of the backend code
COPY BackEndFlask/ /app/

# Set Python path explicitly
ENV PYTHONPATH=/app:$PYTHONPATH

# Create an empty sendgrid.env to prevent the error (optional)
RUN touch /app/sendgrid.env


# Expose the Backend port
EXPOSE 5000

# Start the Flask server
# -h or --help for usage
# -i or --install for installing requirements
# -r or --r for database reset
# -d or --demo for loading demo data
# -t or --test for test mode
# -s or --start for starting the server
# Always use "-ds" to start the server
# Or "-tds" for testing & starting the server
CMD ["python", "setupEnv.py", "-ds"] 
