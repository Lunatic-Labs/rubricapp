#-----------------------------------------------------------------------
# This is a file that is run by Github actions to test certain aspects
# of our code before we merge into master.
#
# Date last modified: Fri May 30 12:43:35 PM CDT 2025
#-----------------------------------------------------------------------
name: Continuous Integration for Rubric App

# Specifies to run on PRs set to merge into master
on:
  pull_request:
  push:
    branches:
      - master

# Front-end linting and back-end building are their own jobs
# since they arent dependent on each other.
jobs:
  # lint job builds the frontend and runs ESLint.
  lint:
    runs-on: ubuntu-latest
    steps:
      # Fetch job to see runner info
      - name: Display system info
        run:  |
          echo "CPU info:"
          lscpu
          echo "Memory usage:"
          free -h
          echo "Disk usage:"
          df -h

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with: 
          node-version: 20
          cache: "npm"
          cache-dependency-path: FrontEndReact/package.json
        
      - name: Install Node dependencies
        run:  |
          cd FrontEndReact
          npm install --verbose 
      
      - name: Run ESLint
        run:  |
          cd FrontEndReact
          npx eslint --max-warnings=0 .

  backend:
  # Builds the backend and validates that its running.
    runs-on: ubuntu-latest
    steps:
      # Fetch job to see runner info
      - name: Display system info
        run:  |
          echo "CPU info:"
          lscpu
          echo "Memory usage:"
          free -h
          echo "Disk usage:"
          df -h

      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build backend
        run: docker compose build backend --no-cache
      
      - name: Validate backend image
        run:  |
          if ! docker image inspect backend >/dev/null 2>&1; then
            echo "Error: Backend image not found!"
            exit 1
          fi
        # TODO: Run pytests here using docker compose run or something
      
      # Note that any error will immediatly trigger the contianer to be shut down.
      # Start backend and check its health.
      - name: Start backend
        run:  |
          docker compose up --no-build --detach backend

            docker ps  # Check if container is running
            docker compose logs backend  # Check backend logs

      - name: Dependency check
        run:  |
            (pip freeze | sed 's/[>=]//g' | awk -F '==' '{print $1, $2}' | sort) > installed.txt
            (sed 's/[>=]//g' BackEndFlask/requirements.txt | awk -F '==' '{print $1, $2}' | sort) > expected.txt
            comm -3 installed.txt expected.txt | column -t
            rm -f -v installed.txt expected.txt 

      - name: Backend health check
        run:  |
            echo "CHECK STATUS"
            docker inspect --format='{{json .State.Status}}' $(docker ps -q --filter "name=backend")

            netstat -tulpn | grep 5050  # Check if port is actually listening
            sleep 5
            curl -v 'http://127.0.0.1:5050/api'
        #Use curl to make sure the backend is up and accessible
  
  validate:
  # runs the jest tests once everything has show to work as expected.
    runs-on: ubuntu-latest
    needs:
      - lint
      - backend
    steps:
      # Fetch job to see runner info
      - name: Display system info
        run:  |
          echo "CPU info:"
          lscpu
          echo "Memory usage:"
          free -h
          echo "Disk usage:"
          df -h

      - name: Verify Node.js instalation
        run: node -v

      - name: Run Jest tests
        run:  |
          cd FrontEndReact
          npm test -- --all --cacheDirectory /tmp/jest-cache
        # See FrontEndReact/jest-ci-setup.js for the rationale behind the --setupFiles ./jest-ci-setup.js hack
        # The ./node_modules/react-app-polyfill/jsdom.js setup file is enabled by default, but
        #  using any setupFiles args overrides the defaults so I have to add it
        #  manually
        env:
          REACT_APP_API_URL: "http://127.0.0.1:5050/api"





